C51 COMPILER V9.00   MAIN                                                                  04/08/2017 19:23:34 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE main.c LARGE BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "DS18B20.h"
   2          #include "LCD12864.h"
   3          #include "DS12887.h"
   4          #include "timer.h"
   5          #include <intrins.h>
   6          
   7          float wen_val;
   8          BYTE ah,al;
   9          
  10          BYTE timer_key= 0;
  11          BYTE scale_line_status = 0;
  12          WORD g_base = 0;
  13          WORD new_temprature[BUF_LEN] = {0};
  14          WORD old_temprature[BUF_LEN] = {0};
  15          
  16          /*********************************************************
  17          *显示温度程序
  18          **********************************************************/
  19          void crt_wendu(BYTE line,column)
  20          {
  21   1                 read_wendu();
  22   1                 ah=temperature[1]<<4;
  23   1                 ah&=0xf0;
  24   1                 al=temperature[0]>>4;
  25   1                 al&=0x0f;
  26   1                 ah=ah|al;
  27   1                 al=temperature[0]&0x0f;
  28   1                 if ((ah&0x80)!=0)
  29   1                 {
  30   2                              if (al==0)
  31   2                              {
  32   3                                ah=~ah;ah=ah+1;
  33   3                              }
  34   2                              else
  35   2                              {       
  36   3                                ah=~ah;al=~al;al=al+1;al&=0x0f;
  37   3                              }
  38   2                              wen_val=ah*(-1.0)+al*(-0.0625);
  39   2                 }
  40   1                 else 
  41   1                 {
  42   2                      wen_val=ah*1.0+al*0.0625;
  43   2                 }
  44   1                 seti_wl(line,column);
  45   1                 crt_r(wen_val,1);
  46   1      
  47   1                 write_string("  ℃");
  48   1                 
  49   1                 //write_data(0xA1);
  50   1                 //write_data(0xE3);
  51   1                 
  52   1                 //write_data(0x20);
  53   1      }
  54          
  55          /***************************************************
C51 COMPILER V9.00   MAIN                                                                  04/08/2017 19:23:34 PAGE 2   

  56          ************  显示时间  *****************************
  57          ****************************************************/
  58          void crt_time(BYTE line) 
  59          {
  60   1              BYTE dhi,dli;
  61   1              set_display_place(line,1);
  62   1              dhi=0x32;
  63   1              dli=0x30;       
  64   1              write_data(dhi);
  65   1              write_data(dli);
  66   1              dli=Years;//年
  67   1              dhi=dli & 0xf0;
  68   1          dhi>>=4;
  69   1              dhi+=0x30;
  70   1              dli &=0x0f;
  71   1              dli +=0x30;
  72   1              write_data(dhi);
  73   1              write_data(dli);
  74   1              //dli=0x2d;
  75   1              //write_data(dli);
  76   1              write_string("-");
  77   1      
  78   1              dli=Month;
  79   1              dhi=dli & 0xf0;
  80   1          dhi>>=4;
  81   1              dhi+=0x30;
  82   1              dli &=0x0f;
  83   1              dli +=0x30;
  84   1              write_data(dhi);
  85   1              write_data(dli);
  86   1              write_string("-");
  87   1      
  88   1              dli=Day;
  89   1              dhi=dli & 0xf0;
  90   1          dhi>>=4;
  91   1              dhi+=0x30;
  92   1              dli &=0x0f;
  93   1              dli +=0x30;
  94   1              write_data(dhi);
  95   1              write_data(dli);
  96   1              //write_string("日");
  97   1      
  98   1          set_display_place(line+1,0);
  99   1              dli=Hour;
 100   1              dhi=dli & 0xf0;
 101   1          dhi>>=4;
 102   1              dhi+=0x30;
 103   1              dli &=0x0f;
 104   1              dli +=0x30;
 105   1              write_data(dhi);
 106   1              write_data(dli);
 107   1              dli=0x3a;
 108   1              write_data(dli);
 109   1              dli=Minute;
 110   1              dhi=dli & 0xf0;
 111   1          dhi>>=4;
 112   1              dhi+=0x30;
 113   1              dli &=0x0f;
 114   1              dli +=0x30;
 115   1              write_data(dhi);
 116   1              write_data(dli);
 117   1              dli=0x3a;
C51 COMPILER V9.00   MAIN                                                                  04/08/2017 19:23:34 PAGE 3   

 118   1              write_data(dli);
 119   1              dli=Second;
 120   1              dhi=dli & 0xf0;
 121   1          dhi>>=4;
 122   1              dhi+=0x30;
 123   1              dli &=0x0f;
 124   1              dli +=0x30;
 125   1              write_data(dhi);
 126   1              write_data(dli);
 127   1      
 128   1              write_string_lcd(2,5, "星期");
 129   1              dli=Week;
 130   1              dli     &= 0x07;
 131   1              switch (dli)
 132   1              {
 133   2                      case 7: write_string("日");break;
 134   2                      case 6: write_string("六");break;
 135   2                      case 5: write_string("五");break;
 136   2                      case 4: write_string("四");break;
 137   2                      case 3: write_data(0xC8);write_data(0xFD);break;//"三"
 138   2                      case 2: write_string("二");break;
 139   2                      case 1: write_string("一");
 140   2              }
 141   1      }
 142          
 143          
 144          
 145          
 146          void ShowTime_Temprature(void)
 147          {
 148   1              if ((DS_C & 0x10) != 0)//显示时间 
 149   1                 {
 150   2                         crt_time(1); 
 151   2                         bzz1=~bzz1;
 152   2                         bzz2=~bzz1;
 153   2                 }
 154   1                 write_string_lcd(3,0, "当前温度: ");
 155   1                 crt_wendu(4,8);
 156   1                 Delay2(1);
 157   1      }
 158          
 159          void ShowBIOS()
 160          {
 161   1              write_string_lcd(1,2," HELLO");
 162   1              write_string_lcd(2,2,"欢迎进入");
 163   1              write_string_lcd(3,0,"实时温度采集系统");
 164   1              write_string_lcd(4,3,"By: 葛思邑");
 165   1      }
 166          
 167          BYTE KeyScan()
 168          {  
 169   1              BYTE num_key=0;//按键号 
 170   1          BYTE temp=0;//读取P1口线数据 
 171   1          static BYTE temp_code=0;//用于保存按键值 
 172   1          static BYTE temp_circle=0xFE;//保存P1线上的循环扫描值 
 173   1         
 174   1          static BYTE key_flag=0;//按键有效标识 
 175   1      
 176   1      
 177   1          P1=temp_circle;//0xFX
 178   1          temp=P1;//读取P1口线数据 
 179   1          if(temp!=temp_circle)//有按键动作 
C51 COMPILER V9.00   MAIN                                                                  04/08/2017 19:23:34 PAGE 4   

 180   1          { 
 181   2                  Delay(5);
 182   2                  if(P1!=temp_circle)//确实有按键按下
 183   2                  { 
 184   3                          key_flag=1;//按键有效标识置1 
 185   3                          temp_code=temp;//保存按键值 
 186   3                  } 
 187   2          } 
 188   1          else//松手OR无按键动作,此时应该改变扫描线 
 189   1          { 
 190   2                  if(key_flag==1)//按键有效判断 
 191   2                  { 
 192   3                          key_flag=0; 
 193   3                          switch(temp_code)//读取按键号 
 194   3                          { 
 195   4                                  //P1^0线 
 196   4                                  case 0xEE: num_key=1; 
 197   4                                             break; 
 198   4                                  case 0xDE: num_key=2; 
 199   4                                             break; 
 200   4                                  case 0xBE: num_key=3; 
 201   4                                             break; 
 202   4                                  case 0x7E: num_key=4; 
 203   4                                             break; 
 204   4                                  //P1^1线 
 205   4                                  case 0xED: num_key=5; 
 206   4                                             break; 
 207   4                                  case 0xDD: num_key=6; 
 208   4                                             break; 
 209   4                                  case 0xBD: num_key=7; 
 210   4                                             break; 
 211   4                                  case 0x7D: num_key=8; 
 212   4                                             break; 
 213   4                                  //P1^2线 
 214   4                                  case 0xEB: num_key=9; 
 215   4                                             break; 
 216   4                                  case 0xDB: num_key=10; 
 217   4                                             break; 
 218   4                                  case 0xBB: num_key=11; 
 219   4                                             break; 
 220   4                                  case 0x7B: num_key=12; 
 221   4                                             break; 
 222   4                                  //P1^3线 
 223   4                                  case 0xE7: num_key=13; 
 224   4                                             break; 
 225   4                                  case 0xD7: num_key=14; 
 226   4                                             break; 
 227   4                                  case 0xB7: num_key=15; 
 228   4                                             break; 
 229   4                                  case 0x77: num_key=16; 
 230   4                                             break; 
 231   4                          } 
 232   3                  } 
 233   2                  temp_circle=_crol_(temp_circle,1);//改变扫描线 
 234   2                  if(temp_circle==0xEF) 
 235   2                  { 
 236   3                          temp_circle=0xFE; 
 237   3                  } 
 238   2          } 
 239   1          return(num_key);//返回按键号 
 240   1      }
 241          
C51 COMPILER V9.00   MAIN                                                                  04/08/2017 19:23:34 PAGE 5   

 242          
 243          void UpdateNewTemprature()
 244          {
 245   1              BYTE i = 0;
 246   1      
 247   1              for(i = 0;i < BUF_LEN-1;i++)
 248   1              {
 249   2                       new_temprature[i] =  new_temprature[i+1];
 250   2              }
 251   1              get_wendu();
 252   1      
 253   1              new_temprature[BUF_LEN-1]  = (WORD)(wen_val*100);
 254   1      }
 255          
 256          void UpdateOldTemprature()
 257          {
 258   1              BYTE i = 0, j = 0;
 259   1      
 260   1              for(i = 0;i < BUF_LEN;i++)
 261   1              {
 262   2                       old_temprature[i] =  new_temprature[i];
 263   2              }
 264   1      }
 265          
 266          void main()
 267          {
 268   1              
 269   1              BYTE key_num = 0;
 270   1              BYTE status = 1;
 271   1              //BYTE i = 0;
 272   1              BYTE show_scale_line_flag = 0;
 273   1              BYTE first_time_scale = 0;      
 274   1              SP=0x60;
 275   1              lcd_init();
 276   1              //TimerInit();
 277   1              DS_init();
 278   1              //write_time();   //DS12C887时间设置
 279   1              
 280   1              DS18B20_Init();
 281   1              get_wendu();
 282   1              g_base = (WORD)((wen_val-1)*100);
 283   1                       
 284   1      
 285   1              while(1)                           
 286   1              {
 287   2                        key_num =KeyScan();
 288   2                        if(key_num != 0)
 289   2                        {      
 290   3                                      if(key_num == 3)
 291   3                                      {
 292   4                                              lcd_init();
 293   4                                              scale_line_status = 1;
 294   4                                              if(first_time_scale == 0)
 295   4                                              {
 296   5                                                      clear_lcd(); 
 297   5                                              }
 298   4                                              lcd_init_draw();
 299   4                                              if(first_time_scale == 0)
 300   4                                                      ShowXY();
 301   4                                              first_time_scale = 1;   
 302   4                                              show_scale_line_flag = 1;
 303   4                                              TimerInit();
C51 COMPILER V9.00   MAIN                                                                  04/08/2017 19:23:34 PAGE 6   

 304   4                                      }
 305   3                                      else{
 306   4                                               ET0 = 0; //不允许T0中断
 307   4                                               TR0 = 0;  
 308   4                                              lcd_init();
 309   4                                      }
 310   3                                      status = key_num;
 311   3                        }
 312   2                        if(scale_line_status == 1)
 313   2                        {
 314   3                                      UpdateNewTemprature();
 315   3                                      scale_line_status = 2;
 316   3                        }
 317   2                        switch(status)
 318   2                        {
 319   3                                      case 1:
 320   3                                              ShowBIOS();
 321   3                                              break;
 322   3                                      case 2:
 323   3                                              ShowTime_Temprature();
 324   3                                              break;
 325   3                                      case 3:
 326   3                                              if(show_scale_line_flag == 1 || scale_line_status == 2){
 327   4                                                      
 328   4                                                      UpdateScaleLine3();
 329   4                                                      scale_line_status = 3;
 330   4                                                      UpdateOldTemprature();
 331   4                                                      show_scale_line_flag = 0;
 332   4                                              }
 333   3                                              
 334   3                                              break;
 335   3                                      default:
 336   3                                              break;
 337   3                        }   
 338   2              }
 339   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1429    ----
   CONSTANT SIZE    =     85    ----
   XDATA SIZE       =     53      12
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
